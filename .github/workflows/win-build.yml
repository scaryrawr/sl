name: Windows Build SL

on:
  workflow_call:

jobs:
  build:
    runs-on: windows-latest
    strategy:
      matrix:
        target: [ARM64, x64]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create Build Environment
        run: cmake -E make_directory ${{github.workspace}}/build
      
      - name: Configure CMake
        shell: pwsh
        working-directory: ${{github.workspace}}/build
        run: cmake .. -A ${{ matrix.target }} -DCMAKE_TOOLCHAIN_FILE="${env:VCPKG_INSTALLATION_ROOT}\scripts\buildsystems\vcpkg.cmake" -DCMAKE_BUILD_TYPE=Release

      - name: Build
        working-directory: ${{github.workspace}}/build
        shell: bash
        run: cmake --build . --config Release

      - name: Build Installer
        working-directory: ${{github.workspace}}/build
        run: cpack -C Release

      - name: Rename Installer for ARM64
        if: matrix.target == 'ARM64'
        working-directory: ${{github.workspace}}/build
        shell: bash
        run: |
          INSTALLER=$(ls sl-*.exe)
          NEW_INSTALLER=$(echo $INSTALLER | sed 's/win64/woa64/')
          mv $INSTALLER $NEW_INSTALLER

      - name: Find Installer
        id: installer
        working-directory: ${{github.workspace}}/build
        shell: bash
        run: |
          INSTALLER=$(ls sl-*.exe)
          echo "installer=${INSTALLER}" >> $GITHUB_OUTPUT

      - name: Install
        working-directory: ${{github.workspace}}/build
        shell: bash
        run: |
          INSTALLER=$(ls sl-*.exe)
          ./$INSTALLER -q

      - name: Run & Test
        run: |
          "C:\Program Files\sl\bin\sl.exe" --version
          "C:\Program Files\sl\bin\sl.exe" --help

      - name: Upload Installer
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.installer.outputs.installer }}
          path: build/${{ steps.installer.outputs.installer }}
