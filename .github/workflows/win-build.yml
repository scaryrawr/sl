name: Windows Build SL

on:
  push:
    branches:
      - main
    tags:
      - v*
  pull_request:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: windows-latest
    strategy:
      matrix:
        target: [ARM64, x64]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create Build Environment
        run: cmake -E make_directory ${{github.workspace}}/build
      
      - name: Configure CMake
        shell: pwsh
        working-directory: ${{github.workspace}}/build
        run: cmake .. -A ${{ matrix.target }} -DCMAKE_TOOLCHAIN_FILE="${env:VCPKG_INSTALLATION_ROOT}\scripts\buildsystems\vcpkg.cmake" -DCMAKE_BUILD_TYPE=Release

      - name: Build
        working-directory: ${{github.workspace}}/build
        shell: bash
        run: cmake --build . --config Release

      - name: Build Installer
        working-directory: ${{github.workspace}}/build
        run: cpack -C Release

      - name: Rename Installer for ARM64
        if: matrix.target == 'ARM64'
        working-directory: ${{github.workspace}}/build
        shell: bash
        run: |
          INSTALLER=$(find build -name 'sl-*.exe')
          NEW_INSTALLER=$(echo $INSTALLER | sed 's/win64/woa64/')
          mv $INSTALLER $NEW_INSTALLER

      - name: Find Installer
        id: installer
        working-directory: ${{github.workspace}}/build
        shell: bash
        run: |
          INSTALLER=$(find build -name 'sl-*.exe')
          echo "installer=${INSTALLER}" >> $GITHUB_OUTPUT

      - name: Upload Installer
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.installer.outputs.installer }}
          path: build/${{ steps.installer.outputs.installer }}

  release:
    name: Release
    needs: build
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifacts
        id: download-extension
        uses: actions/download-artifact@v4

      - name: List Files
        run: ls -R ${{ steps.download-extension.outputs.download-path }}

      - uses: softprops/action-gh-release@v2
        with:
          prerelease: false
          generate_release_notes: true
          fail_on_unmatched_files: true
          files: |
            ${{ steps.download-extension.outputs.download-path }}/sl-*.exe
